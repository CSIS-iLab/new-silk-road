@import "variables";
@import "../../../node_modules/react-select/dist/react-select.css";

.searchView {
    width: 300px;
    padding: 4px;
    background-color: $pale-green;
    position: absolute;
    @include display(flex);
    @include flex-direction(column);
    font-size: $minor-text-size;
    top: 20px;
    right: 20px;
    section {
        margin-top: 4px;
        padding-bottom: 4px;
        border-bottom: 1px solid $slate-grey;
        header {
            @include display(flex);
            @include flex-direction(row);
            @include justify-content(space-between);
            @include align-items(center);
            button {
                @include flex(0 0 auto);
                padding: 0 4px;
            }
            h4 {
                display: inline-block;
                @include flex(1 0 auto);
                margin: 0;
            }
        }
    }
    .sectionRow {
        display: block;
        clear: both;
        margin-bottom: 4px;
    }
    footer {
        margin-top: 2px;
        button {
            display: block;
            font-size: 12px;
            width: 100%;
        }
    }
    button,
    input,
    label {
        display: inline-block;
    }
    label {
        width: 90px;
        margin-right: 3px;
        text-align: right;
    }
    input {
        overflow: hidden;
    }
    select {
        max-width: 240px;
        margin-right: 6px;
        &:last-of-type {
            margin-right: 0;
        }
    }
}


.searchWidget {
    @include flex(0 0 auto);
    @include order(0);
}

.buttonBar {
    @include display(flex);
    @include justify-content(space-between);
}

.buttonBar > button {
    @include flex(0.25 1 auto);
    @include order(0);
}

#primarySearch {
    input, button {
        background-color: $dark-night;
    }
    input {
        padding: 8px 4px 8px 8px;
    }
}


.resultsView {
    section {
        border: none;
    }
    padding-top: 0;
    .resultsNav {
        margin: 4px 0;
    }
    ul.searchResults {
        list-style: none;
        padding: 0 3px;
        margin: 0;

        > li {
            margin: 0 10px 8px 6px;
            padding-bottom: 8px;
            border-bottom: 2px solid $slate-grey;

            &:last-of-type {
                border: none;
            }

            p {
                margin-bottom: 4px;
            }
        }
    }
}

.initiativesList {
    ul {
        margin: 0 0 0 6px;
        li {
            font-size: $minor-text-size * 0.9;
            list-style-type: none;
            margin-bottom: 3px;
        }
    }
}


.dateRangeSelect {
    @include display(flex);
    @include flex-direction(row);
    @include flex-wrap(wrap);
    @include justify-content(space-between);
    @include align-items(center);
    > span {
        @include flex(0.25 0 auto);
        padding: 0 2px;
        text-align: center;
    }
    .Select {
        @include flex(1 0 100%);
    }
    .Select-menu-outer {
        width: auto;
    }
    input {
        @include flex(0.5 1 auto);
        overflow: hidden;
    }
}


.Select {
    font-family: $serif-font-family;
    .Select-input input {
        padding: 8px 0 12px;
    }
    .Select-control {
        color: $creamer;
        background-color: $slate-grey;
        border-radius: 0;

        .Select-value {
            max-width: 85%;
        }
        .Select-value-label, .Select-clear-zone {
            color: $creamer;
            &:hover {
                color: $dark-night transparent transparent;
            }
        }
    }
    .Select-placeholder {
        color: $placeholder-color;
    }
    .Select-arrow-zone{
        &:hover {
            .Select-arrow {
                border-color: $dark-night transparent transparent;
            }
        }
    }
    .Select-arrow {
        border-color: $creamer transparent transparent;
    }

    .Select-menu-outer {
        background-color: $slate-grey;
    }
    .Select-option {
        color: $creamer;
        background-color: $slate-grey;

        &:hover {
            background-color: $dark-night;
        }
    }
}
.has-value.Select > .Select-control > .Select-value .Select-value-label,
.has-value.is-pseudo-focused.Select > .Select-control > .Select-value .Select-value-label {
    color: $creamer;
}
