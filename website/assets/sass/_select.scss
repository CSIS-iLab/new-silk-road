/*
  Because we don't control the internal elements of the Select
  component, we can just namespace rules beneath this container
  class.

  All rules specified below can be assumed to be overrides of
  selectors defined in the react-select style definitions.
  Their form is dictated by the form of rules given there.
*/
.searchView-select__container {
  /*
    The height parameters must take into account the fact that there is
    an overall wrapper element .Select-control whose size includes 2px
    (total) top and bottom borders. The height of the contents of this
    wrappers must also be overridden at multiple points, but it must
    accommodate that border.
  */
  $widget-height: 26px;
  $widget-border-width: 2px;
  $widget-height-inner: $widget-height - $widget-border-width;
  
  $widget-margin-left: 16px;

  width: calc(100% - #{$widget-margin-left});
  margin-left: $widget-margin-left;

  .Select-control {
    @include display(flex);
    @include flex-wrap(nowrap);
    border-radius: 0;
    box-sizing: border-box;
    height: $widget-height;
    line-height: 0;
  }

  .Select-multi-value-wrapper {
    @include flex-basis(100%);
    height: $widget-height-inner;
  }

  .Select-arrow-zone {
    line-height: $widget-height-inner;
  }

  .Select-placeholder {
    line-height: $widget-height-inner;
    height: $widget-height-inner;
  }

  .Select-input {
    height: $widget-height-inner;
  }

  .Select-input>input {
    padding-top: 4px;
  }

  .Select--multi .Select-input {
    vertical-align: top;
  }

  // Selection styles
  &.Select--multi {
    .Select-clear-zone {
      padding-top: 3px;
      padding-left: 3px;
    }

    .Select-value {
      @include display(inline-flex);
      @include flex-direction(row-reverse);
      border: none;
      border-radius: 0;
      background-color: $map-mid-grey;
      color: map-get($map-colors, 'body');
      font-size: map-get($map-font-sizes, 'section-title');
      line-height: 1;
    }

    /*
      The magic numbers for whitespace on .Select-value-label and
      .Select-value-icon are dictated by spec requirements, but
      they are too context-specific to be worth assigning a variable.
    */
    .Select-value-label {
      padding: 2px 0 2px 8px;
    }

    .Select-value-icon {
      border-right: none;
      padding: 3px 6px 3px 4px;

      &:hover {
        background-color: inherit;
        color: inherit;
      }
    }
  }

  &.Select--single {
    > .Select-control .Select-value {
      line-height: $widget-height-inner;
    }
  }

  // Select menu and options
  .Select-menu-outer {
    border-top-color: #ccc;
  }

  .Select-menu {
    background-color: $map-mid-grey;
    padding: 4px 12px;
  }

  .Select-option {
    background-color: inherit;
    padding: 0;
    line-height: 1.25;
    margin-bottom: 8px;

    /*
      Allow .Select-menu's padding to dictate the
      bottom-most whitespace.
    */
    &:last-of-type {
      margin-bottom: 0;
    }
  }
}

.searchView-select__container.Select.Select--multi.has-value {
  .Select-control {
    height: auto;
  }

  .Select-multi-value-wrapper {
    height: auto;
    padding-bottom: 5px;
  }
}