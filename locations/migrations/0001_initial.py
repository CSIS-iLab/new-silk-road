# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-08 17:55
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Display name')),
                ('numeric', models.PositiveSmallIntegerField(help_text='ISO 3166 numeric', unique=True)),
                ('alpha_3', models.CharField(help_text='ISO 3166 alpha-3 name', max_length=3, unique=True)),
            ],
            options={
                'verbose_name_plural': 'countries',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='GeometryStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('countries', models.ManyToManyField(to='locations.Country')),
            ],
        ),
        migrations.CreateModel(
            name='LineStringGeometry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('geometry', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
            ],
            options={
                'verbose_name': 'line',
            }
        ),
        migrations.CreateModel(
            name='MultiGeometry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryCollectionField(srid=4326)),
            ],
            options={
                'verbose_name': 'geometry collection',
            }
        ),
        migrations.CreateModel(
            name='PointGeometry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'verbose_name': 'point',
            }
        ),
        migrations.CreateModel(
            name='PolygonGeometry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
            ],
            options={
                'verbose_name': 'polygon',
            }
        ),
        migrations.AddField(
            model_name='region',
            name='geography',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.PolygonGeometry'),
        ),
        migrations.AddField(
            model_name='place',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.PointGeometry', verbose_name='geographic location'),
        ),
        migrations.AddField(
            model_name='geometrystore',
            name='lines',
            field=models.ManyToManyField(to='locations.LineStringGeometry'),
        ),
        migrations.AddField(
            model_name='geometrystore',
            name='points',
            field=models.ManyToManyField(to='locations.PointGeometry'),
        ),
        migrations.AddField(
            model_name='geometrystore',
            name='polygons',
            field=models.ManyToManyField(to='locations.PolygonGeometry'),
        ),
    ]
