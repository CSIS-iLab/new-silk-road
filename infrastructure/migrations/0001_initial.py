# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-03-23 16:37
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import locations.models
import markymark.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sources', '0001_initial'),
        ('locations', '0002_geocollection'),
        ('facts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InfrastructureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Initiative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=140)),
                ('notes', markymark.fields.MarkdownField(blank=True)),
                ('founding_date', models.DateField(blank=True, null=True, verbose_name='Founding/Signing Date')),
                ('member_countries', django.contrib.postgres.fields.ArrayField(base_field=locations.models.CountryField(choices=[(4, 'Afghanistan'), (248, 'Åland Islands'), (8, 'Albania'), (12, 'Algeria'), (16, 'American Samoa'), (20, 'Andorra'), (24, 'Angola'), (660, 'Anguilla'), (10, 'Antarctica'), (28, 'Antigua and Barbuda'), (32, 'Argentina'), (51, 'Armenia'), (533, 'Aruba'), (36, 'Australia'), (40, 'Austria'), (31, 'Azerbaijan'), (44, 'Bahamas'), (48, 'Bahrain'), (50, 'Bangladesh'), (52, 'Barbados'), (112, 'Belarus'), (56, 'Belgium'), (84, 'Belize'), (204, 'Benin'), (60, 'Bermuda'), (64, 'Bhutan'), (68, 'Bolivia, Plurinational State of'), (535, 'Bonaire, Sint Eustatius and Saba'), (70, 'Bosnia and Herzegovina'), (72, 'Botswana'), (74, 'Bouvet Island'), (76, 'Brazil'), (86, 'British Indian Ocean Territory'), (96, 'Brunei Darussalam'), (100, 'Bulgaria'), (854, 'Burkina Faso'), (108, 'Burundi'), (116, 'Cambodia'), (120, 'Cameroon'), (124, 'Canada'), (132, 'Cabo Verde'), (136, 'Cayman Islands'), (140, 'Central African Republic'), (148, 'Chad'), (152, 'Chile'), (156, 'China'), (162, 'Christmas Island'), (166, 'Cocos (Keeling) Islands'), (170, 'Colombia'), (174, 'Comoros'), (178, 'Congo'), (180, 'Congo, Democratic Republic of the'), (184, 'Cook Islands'), (188, 'Costa Rica'), (384, "Côte d'Ivoire"), (191, 'Croatia'), (192, 'Cuba'), (531, 'Curaçao'), (196, 'Cyprus'), (203, 'Czech Republic'), (208, 'Denmark'), (262, 'Djibouti'), (212, 'Dominica'), (214, 'Dominican Republic'), (218, 'Ecuador'), (818, 'Egypt'), (222, 'El Salvador'), (226, 'Equatorial Guinea'), (232, 'Eritrea'), (233, 'Estonia'), (231, 'Ethiopia'), (238, 'Falkland Islands (Malvinas)'), (234, 'Faroe Islands'), (242, 'Fiji'), (246, 'Finland'), (250, 'France'), (254, 'French Guiana'), (258, 'French Polynesia'), (260, 'French Southern Territories'), (266, 'Gabon'), (270, 'Gambia'), (268, 'Georgia'), (276, 'Germany'), (288, 'Ghana'), (292, 'Gibraltar'), (300, 'Greece'), (304, 'Greenland'), (308, 'Grenada'), (312, 'Guadeloupe'), (316, 'Guam'), (320, 'Guatemala'), (831, 'Guernsey'), (324, 'Guinea'), (624, 'Guinea-Bissau'), (328, 'Guyana'), (332, 'Haiti'), (334, 'Heard Island and McDonald Islands'), (336, 'Holy See'), (340, 'Honduras'), (344, 'Hong Kong'), (348, 'Hungary'), (352, 'Iceland'), (356, 'India'), (360, 'Indonesia'), (364, 'Iran, Islamic Republic of'), (368, 'Iraq'), (372, 'Ireland'), (833, 'Isle of Man'), (376, 'Israel'), (380, 'Italy'), (388, 'Jamaica'), (392, 'Japan'), (832, 'Jersey'), (400, 'Jordan'), (398, 'Kazakhstan'), (404, 'Kenya'), (296, 'Kiribati'), (408, "Korea, Democratic People's Republic of"), (410, 'Korea, Republic of'), (414, 'Kuwait'), (417, 'Kyrgyzstan'), (418, "Lao People's Democratic Republic"), (428, 'Latvia'), (422, 'Lebanon'), (426, 'Lesotho'), (430, 'Liberia'), (434, 'Libya'), (438, 'Liechtenstein'), (440, 'Lithuania'), (442, 'Luxembourg'), (446, 'Macao'), (807, 'Macedonia, the former Yugoslav Republic of'), (450, 'Madagascar'), (454, 'Malawi'), (458, 'Malaysia'), (462, 'Maldives'), (466, 'Mali'), (470, 'Malta'), (584, 'Marshall Islands'), (474, 'Martinique'), (478, 'Mauritania'), (480, 'Mauritius'), (175, 'Mayotte'), (484, 'Mexico'), (583, 'Micronesia, Federated States of'), (498, 'Moldova, Republic of'), (492, 'Monaco'), (496, 'Mongolia'), (499, 'Montenegro'), (500, 'Montserrat'), (504, 'Morocco'), (508, 'Mozambique'), (104, 'Myanmar'), (516, 'Namibia'), (520, 'Nauru'), (524, 'Nepal'), (528, 'Netherlands'), (540, 'New Caledonia'), (554, 'New Zealand'), (558, 'Nicaragua'), (562, 'Niger'), (566, 'Nigeria'), (570, 'Niue'), (574, 'Norfolk Island'), (580, 'Northern Mariana Islands'), (578, 'Norway'), (512, 'Oman'), (586, 'Pakistan'), (585, 'Palau'), (275, 'Palestine, State of'), (591, 'Panama'), (598, 'Papua New Guinea'), (600, 'Paraguay'), (604, 'Peru'), (608, 'Philippines'), (612, 'Pitcairn'), (616, 'Poland'), (620, 'Portugal'), (630, 'Puerto Rico'), (634, 'Qatar'), (638, 'Réunion'), (642, 'Romania'), (643, 'Russian Federation'), (646, 'Rwanda'), (652, 'Saint Barthélemy'), (654, 'Saint Helena, Ascension and Tristan da Cunha'), (659, 'Saint Kitts and Nevis'), (662, 'Saint Lucia'), (663, 'Saint Martin (French part)'), (666, 'Saint Pierre and Miquelon'), (670, 'Saint Vincent and the Grenadines'), (882, 'Samoa'), (674, 'San Marino'), (678, 'Sao Tome and Principe'), (682, 'Saudi Arabia'), (686, 'Senegal'), (688, 'Serbia'), (690, 'Seychelles'), (694, 'Sierra Leone'), (702, 'Singapore'), (534, 'Sint Maarten (Dutch part)'), (703, 'Slovakia'), (705, 'Slovenia'), (90, 'Solomon Islands'), (706, 'Somalia'), (710, 'South Africa'), (239, 'South Georgia and the South Sandwich Islands'), (728, 'South Sudan'), (724, 'Spain'), (144, 'Sri Lanka'), (729, 'Sudan'), (740, 'Suriname'), (744, 'Svalbard and Jan Mayen'), (748, 'Swaziland'), (752, 'Sweden'), (756, 'Switzerland'), (760, 'Syrian Arab Republic'), (158, 'Taiwan, Province of China'), (762, 'Tajikistan'), (834, 'Tanzania, United Republic of'), (764, 'Thailand'), (626, 'Timor-Leste'), (768, 'Togo'), (772, 'Tokelau'), (776, 'Tonga'), (780, 'Trinidad and Tobago'), (788, 'Tunisia'), (792, 'Turkey'), (795, 'Turkmenistan'), (796, 'Turks and Caicos Islands'), (798, 'Tuvalu'), (800, 'Uganda'), (804, 'Ukraine'), (784, 'United Arab Emirates'), (826, 'United Kingdom'), (840, 'United States'), (581, 'United States Minor Outlying Islands'), (858, 'Uruguay'), (860, 'Uzbekistan'), (548, 'Vanuatu'), (862, 'Venezuela, Bolivarian Republic of'), (704, 'Viet Nam'), (92, 'Virgin Islands, British'), (850, 'Virgin Islands, U.S.'), (876, 'Wallis and Futuna'), (732, 'Western Sahara'), (887, 'Yemen'), (894, 'Zambia'), (716, 'Zimbabwe')]), blank=True, default=list, null=True, size=None)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('affiliated_events', models.ManyToManyField(blank=True, to='facts.Event')),
                ('affiliated_organizations', models.ManyToManyField(blank=True, to='facts.Organization')),
                ('affiliated_people', models.ManyToManyField(blank=True, to='facts.Person')),
                ('geographic_scope', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.Region')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InitiativeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200, verbose_name='Project name/title')),
                ('countries', django.contrib.postgres.fields.ArrayField(base_field=locations.models.CountryField(choices=[(4, 'Afghanistan'), (248, 'Åland Islands'), (8, 'Albania'), (12, 'Algeria'), (16, 'American Samoa'), (20, 'Andorra'), (24, 'Angola'), (660, 'Anguilla'), (10, 'Antarctica'), (28, 'Antigua and Barbuda'), (32, 'Argentina'), (51, 'Armenia'), (533, 'Aruba'), (36, 'Australia'), (40, 'Austria'), (31, 'Azerbaijan'), (44, 'Bahamas'), (48, 'Bahrain'), (50, 'Bangladesh'), (52, 'Barbados'), (112, 'Belarus'), (56, 'Belgium'), (84, 'Belize'), (204, 'Benin'), (60, 'Bermuda'), (64, 'Bhutan'), (68, 'Bolivia, Plurinational State of'), (535, 'Bonaire, Sint Eustatius and Saba'), (70, 'Bosnia and Herzegovina'), (72, 'Botswana'), (74, 'Bouvet Island'), (76, 'Brazil'), (86, 'British Indian Ocean Territory'), (96, 'Brunei Darussalam'), (100, 'Bulgaria'), (854, 'Burkina Faso'), (108, 'Burundi'), (116, 'Cambodia'), (120, 'Cameroon'), (124, 'Canada'), (132, 'Cabo Verde'), (136, 'Cayman Islands'), (140, 'Central African Republic'), (148, 'Chad'), (152, 'Chile'), (156, 'China'), (162, 'Christmas Island'), (166, 'Cocos (Keeling) Islands'), (170, 'Colombia'), (174, 'Comoros'), (178, 'Congo'), (180, 'Congo, Democratic Republic of the'), (184, 'Cook Islands'), (188, 'Costa Rica'), (384, "Côte d'Ivoire"), (191, 'Croatia'), (192, 'Cuba'), (531, 'Curaçao'), (196, 'Cyprus'), (203, 'Czech Republic'), (208, 'Denmark'), (262, 'Djibouti'), (212, 'Dominica'), (214, 'Dominican Republic'), (218, 'Ecuador'), (818, 'Egypt'), (222, 'El Salvador'), (226, 'Equatorial Guinea'), (232, 'Eritrea'), (233, 'Estonia'), (231, 'Ethiopia'), (238, 'Falkland Islands (Malvinas)'), (234, 'Faroe Islands'), (242, 'Fiji'), (246, 'Finland'), (250, 'France'), (254, 'French Guiana'), (258, 'French Polynesia'), (260, 'French Southern Territories'), (266, 'Gabon'), (270, 'Gambia'), (268, 'Georgia'), (276, 'Germany'), (288, 'Ghana'), (292, 'Gibraltar'), (300, 'Greece'), (304, 'Greenland'), (308, 'Grenada'), (312, 'Guadeloupe'), (316, 'Guam'), (320, 'Guatemala'), (831, 'Guernsey'), (324, 'Guinea'), (624, 'Guinea-Bissau'), (328, 'Guyana'), (332, 'Haiti'), (334, 'Heard Island and McDonald Islands'), (336, 'Holy See'), (340, 'Honduras'), (344, 'Hong Kong'), (348, 'Hungary'), (352, 'Iceland'), (356, 'India'), (360, 'Indonesia'), (364, 'Iran, Islamic Republic of'), (368, 'Iraq'), (372, 'Ireland'), (833, 'Isle of Man'), (376, 'Israel'), (380, 'Italy'), (388, 'Jamaica'), (392, 'Japan'), (832, 'Jersey'), (400, 'Jordan'), (398, 'Kazakhstan'), (404, 'Kenya'), (296, 'Kiribati'), (408, "Korea, Democratic People's Republic of"), (410, 'Korea, Republic of'), (414, 'Kuwait'), (417, 'Kyrgyzstan'), (418, "Lao People's Democratic Republic"), (428, 'Latvia'), (422, 'Lebanon'), (426, 'Lesotho'), (430, 'Liberia'), (434, 'Libya'), (438, 'Liechtenstein'), (440, 'Lithuania'), (442, 'Luxembourg'), (446, 'Macao'), (807, 'Macedonia, the former Yugoslav Republic of'), (450, 'Madagascar'), (454, 'Malawi'), (458, 'Malaysia'), (462, 'Maldives'), (466, 'Mali'), (470, 'Malta'), (584, 'Marshall Islands'), (474, 'Martinique'), (478, 'Mauritania'), (480, 'Mauritius'), (175, 'Mayotte'), (484, 'Mexico'), (583, 'Micronesia, Federated States of'), (498, 'Moldova, Republic of'), (492, 'Monaco'), (496, 'Mongolia'), (499, 'Montenegro'), (500, 'Montserrat'), (504, 'Morocco'), (508, 'Mozambique'), (104, 'Myanmar'), (516, 'Namibia'), (520, 'Nauru'), (524, 'Nepal'), (528, 'Netherlands'), (540, 'New Caledonia'), (554, 'New Zealand'), (558, 'Nicaragua'), (562, 'Niger'), (566, 'Nigeria'), (570, 'Niue'), (574, 'Norfolk Island'), (580, 'Northern Mariana Islands'), (578, 'Norway'), (512, 'Oman'), (586, 'Pakistan'), (585, 'Palau'), (275, 'Palestine, State of'), (591, 'Panama'), (598, 'Papua New Guinea'), (600, 'Paraguay'), (604, 'Peru'), (608, 'Philippines'), (612, 'Pitcairn'), (616, 'Poland'), (620, 'Portugal'), (630, 'Puerto Rico'), (634, 'Qatar'), (638, 'Réunion'), (642, 'Romania'), (643, 'Russian Federation'), (646, 'Rwanda'), (652, 'Saint Barthélemy'), (654, 'Saint Helena, Ascension and Tristan da Cunha'), (659, 'Saint Kitts and Nevis'), (662, 'Saint Lucia'), (663, 'Saint Martin (French part)'), (666, 'Saint Pierre and Miquelon'), (670, 'Saint Vincent and the Grenadines'), (882, 'Samoa'), (674, 'San Marino'), (678, 'Sao Tome and Principe'), (682, 'Saudi Arabia'), (686, 'Senegal'), (688, 'Serbia'), (690, 'Seychelles'), (694, 'Sierra Leone'), (702, 'Singapore'), (534, 'Sint Maarten (Dutch part)'), (703, 'Slovakia'), (705, 'Slovenia'), (90, 'Solomon Islands'), (706, 'Somalia'), (710, 'South Africa'), (239, 'South Georgia and the South Sandwich Islands'), (728, 'South Sudan'), (724, 'Spain'), (144, 'Sri Lanka'), (729, 'Sudan'), (740, 'Suriname'), (744, 'Svalbard and Jan Mayen'), (748, 'Swaziland'), (752, 'Sweden'), (756, 'Switzerland'), (760, 'Syrian Arab Republic'), (158, 'Taiwan, Province of China'), (762, 'Tajikistan'), (834, 'Tanzania, United Republic of'), (764, 'Thailand'), (626, 'Timor-Leste'), (768, 'Togo'), (772, 'Tokelau'), (776, 'Tonga'), (780, 'Trinidad and Tobago'), (788, 'Tunisia'), (792, 'Turkey'), (795, 'Turkmenistan'), (796, 'Turks and Caicos Islands'), (798, 'Tuvalu'), (800, 'Uganda'), (804, 'Ukraine'), (784, 'United Arab Emirates'), (826, 'United Kingdom'), (840, 'United States'), (581, 'United States Minor Outlying Islands'), (858, 'Uruguay'), (860, 'Uzbekistan'), (548, 'Vanuatu'), (862, 'Venezuela, Bolivarian Republic of'), (704, 'Viet Nam'), (92, 'Virgin Islands, British'), (850, 'Virgin Islands, U.S.'), (876, 'Wallis and Futuna'), (732, 'Western Sahara'), (887, 'Yemen'), (894, 'Zambia'), (716, 'Zimbabwe')]), blank=True, default=list, null=True, size=None)),
                ('total_cost_description', models.CharField(blank=True, max_length=100, verbose_name='Total Project Cost')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('commencement_date', models.DateField(blank=True, null=True, verbose_name='Date of commencement of works')),
                ('planned_completion_date', models.DateField(blank=True, null=True, verbose_name='Planned completion date')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Announced/Under Negotiation'), (2, 'Preparatory Works'), (3, 'Started'), (4, 'Under Construction'), (5, 'Completed')], default=1, null=True)),
                ('sources', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=500), blank=True, default=list, help_text='Enter URLs separated by commas.', null=True, size=None, verbose_name='Sources URLs')),
                ('notes', markymark.fields.MarkdownField(blank=True)),
                ('consultants', models.ManyToManyField(blank=True, related_name='projects_consulted', to='facts.Organization', verbose_name='Consultants')),
                ('contacts', models.ManyToManyField(blank=True, related_name='projects_contacts', to='facts.Person', verbose_name='Points of contact')),
                ('contractors', models.ManyToManyField(blank=True, related_name='projects_contracted', to='facts.Organization', verbose_name='Contractors')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.PositiveSmallIntegerField(blank=True, choices=[('Public Materials', ((1, 'Press Releases'), (2, 'Presentations & Brochures'), (3, 'National Development Plans'))), ('Agreements/Contracts', ((4, 'MoU'), (5, 'Financing Agreements'), (6, 'Procurement Contracts'), (7, 'Other Agreements'))), ('Operational Documents', ((8, 'Concept Notes'), (9, 'Review and Approval Documents'), (10, 'Procurement Documents'), (11, 'Appraisal Documents'), (12, 'Administration Manuals'), (13, 'Aide-Memoires'), (14, 'Financial Audits'))), ('Impact Assessment and Monitoring Reports', ((15, 'Environmental and Social Assessment'), (16, 'Resettlement Frameworks'), (17, 'Safeguards Monitoring Reports'), (18, 'Consultation Minutes'))), ('Implementation Progress Reports', ((19, 'Progress Reports'), (20, 'Completion Reports'))), ('Miscellaneous Reports', ((21, 'Miscellaneous Reports'),))], null=True, verbose_name='type')),
                ('notes', markymark.fields.MarkdownField(blank=True)),
                ('status_indicator', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Announced/Under Negotiation'), (2, 'Preparatory Works'), (3, 'Started'), (4, 'Under Construction'), (5, 'Completed')], null=True)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sources.Document')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFunding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, help_text='Values in whole units (dollars, etc.)', null=True)),
                ('currency', models.CharField(blank=True, choices=[('IDR', 'Rupiah'), ('BWP', 'Pula'), ('AOA', 'Kwanza'), ('ZMW', 'Zambian Kwacha'), ('ZWL', 'Zimbabwe Dollar'), ('BBD', 'Barbados Dollar'), ('MAD', 'Moroccan Dirham'), ('BMD', 'Bermudian Dollar'), ('GHS', 'Ghana Cedi'), ('NPR', 'Nepalese Rupee'), ('CAD', 'Canadian Dollar'), ('MRO', 'Ouguiya'), ('BZD', 'Belize Dollar'), ('TND', 'Tunisian Dinar'), ('MKD', 'Denar'), ('MNT', 'Tugrik'), ('PEN', 'Sol'), ('AWG', 'Aruban Florin'), ('GTQ', 'Quetzal'), ('MDL', 'Moldovan Leu'), ('LKR', 'Sri Lanka Rupee'), ('WST', 'Tala'), ('NOK', 'Norwegian Krone'), ('SZL', 'Lilangeni'), ('MUR', 'Mauritius Rupee'), ('HKD', 'Hong Kong Dollar'), ('MXN', 'Mexican Peso'), ('KPW', 'North Korean Won'), ('SYP', 'Syrian Pound'), ('XAF', 'CFA Franc BEAC'), ('LAK', 'Kip'), ('KRW', 'Won'), ('GNF', 'Guinea Franc'), ('TWD', 'New Taiwan Dollar'), ('DJF', 'Djibouti Franc'), ('TZS', 'Tanzanian Shilling'), ('KGS', 'Som'), ('BDT', 'Taka'), ('GBP', 'Pound Sterling'), ('KYD', 'Cayman Islands Dollar'), ('RWF', 'Rwanda Franc'), ('PLN', 'Zloty'), ('BND', 'Brunei Dollar'), ('NGN', 'Naira'), ('STD', 'Dobra'), ('MVR', 'Rufiyaa'), ('ERN', 'Nakfa'), ('MZN', 'Mozambique Metical'), ('MWK', 'Malawi Kwacha'), ('CUC', 'Peso Convertible'), ('VUV', 'Vatu'), ('NZD', 'New Zealand Dollar'), ('GMD', 'Dalasi'), ('CHE', 'WIR Euro'), ('HUF', 'Forint'), ('ETB', 'Ethiopian Birr'), ('JMD', 'Jamaican Dollar'), ('AUD', 'Australian Dollar'), ('CNY', 'Yuan Renminbi'), ('LRD', 'Liberian Dollar'), ('SRD', 'Surinam Dollar'), ('DKK', 'Danish Krone'), ('CVE', 'Cabo Verde Escudo'), ('MMK', 'Kyat'), ('MGA', 'Malagasy Ariary'), ('KWD', 'Kuwaiti Dinar'), ('XPF', 'CFP Franc'), ('SAR', 'Saudi Riyal'), ('EGP', 'Egyptian Pound'), ('SCR', 'Seychelles Rupee'), ('BTN', 'Ngultrum'), ('VND', 'Dong'), ('AFN', 'Afghani'), ('BGN', 'Bulgarian Lev'), ('CHW', 'WIR Franc'), ('BHD', 'Bahraini Dinar'), ('UYI', 'Uruguay Peso en Unidades Indexadas (URUIURUI)'), ('CZK', 'Czech Koruna'), ('HNL', 'Lempira'), ('HTG', 'Gourde'), ('TOP', 'Pa’anga'), ('KMF', 'Comoro Franc'), ('UZS', 'Uzbekistan Sum'), ('UYU', 'Peso Uruguayo'), ('INR', 'Indian Rupee'), ('RSD', 'Serbian Dinar'), ('ANG', 'Netherlands Antillean Guilder'), ('MXV', 'Mexican Unidad de Inversion (UDI)'), ('SDG', 'Sudanese Pound'), ('EUR', 'Euro'), ('JPY', 'Yen'), ('XCD', 'East Caribbean Dollar'), ('TRY', 'Turkish Lira'), ('SGD', 'Singapore Dollar'), ('SEK', 'Swedish Krona'), ('OMR', 'Rial Omani'), ('SBD', 'Solomon Islands Dollar'), ('CLP', 'Chilean Peso'), ('GEL', 'Lari'), ('UAH', 'Hryvnia'), ('CDF', 'Congolese Franc'), ('RON', 'Romanian Leu'), ('SLL', 'Leone'), ('QAR', 'Qatari Rial'), ('MYR', 'Malaysian Ringgit'), ('CHF', 'Swiss Franc'), ('NIO', 'Cordoba Oro'), ('USN', 'US Dollar (Next day)'), ('SSP', 'South Sudanese Pound'), ('BAM', 'Convertible Mark'), ('FJD', 'Fiji Dollar'), ('PHP', 'Philippine Peso'), ('PAB', 'Balboa'), ('YER', 'Yemeni Rial'), ('KHR', 'Riel'), ('FKP', 'Falkland Islands Pound'), ('MOP', 'Pataca'), ('KES', 'Kenyan Shilling'), ('CRC', 'Costa Rican Colon'), ('COP', 'Colombian Peso'), ('TTD', 'Trinidad and Tobago Dollar'), ('LBP', 'Lebanese Pound'), ('PYG', 'Guarani'), ('IRR', 'Iranian Rial'), ('THB', 'Baht'), ('IQD', 'Iraqi Dinar'), ('ALL', 'Lek'), ('DOP', 'Dominican Peso'), ('AMD', 'Armenian Dram'), ('CUP', 'Cuban Peso'), ('BIF', 'Burundi Franc'), ('AZN', 'Azerbaijanian Manat'), ('HRK', 'Kuna'), ('SVC', 'El Salvador Colon'), ('KZT', 'Tenge'), ('BOV', 'Mvdol'), ('ARS', 'Argentine Peso'), ('BSD', 'Bahamian Dollar'), ('PKR', 'Pakistan Rupee'), ('XOF', 'CFA Franc BCEAO'), ('LYD', 'Libyan Dinar'), ('BOB', 'Boliviano'), ('BRL', 'Brazilian Real'), ('SOS', 'Somali Shilling'), ('PGK', 'Kina'), ('ZAR', 'Rand'), ('DZD', 'Algerian Dinar'), ('JOD', 'Jordanian Dinar'), ('GYD', 'Guyana Dollar'), ('VEF', 'Bolívar'), ('TJS', 'Somoni'), ('CLF', 'Unidad de Fomento'), ('SHP', 'Saint Helena Pound'), ('LSL', 'Loti'), ('NAD', 'Namibia Dollar'), ('GIP', 'Gibraltar Pound'), ('USD', 'US Dollar'), ('RUB', 'Russian Ruble'), ('BYR', 'Belarusian Ruble'), ('ISK', 'Iceland Krona'), ('AED', 'UAE Dirham'), ('UGX', 'Uganda Shilling'), ('COU', 'Unidad de Valor Real'), ('TMT', 'Turkmenistan New Manat'), ('ILS', 'New Israeli Sheqel')], default='USD', max_length=3, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.Project')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facts.Organization')),
            ],
            options={
                'verbose_name_plural': 'project funders',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='documents',
            field=models.ManyToManyField(blank=True, to='infrastructure.ProjectDocument'),
        ),
        migrations.AddField(
            model_name='project',
            name='funding',
            field=models.ManyToManyField(blank=True, related_name='projects_funded', through='infrastructure.ProjectFunding', to='facts.Organization'),
        ),
        migrations.AddField(
            model_name='project',
            name='implementers',
            field=models.ManyToManyField(blank=True, related_name='projects_implemented', to='facts.Organization', verbose_name='Client or implementing agency/ies'),
        ),
        migrations.AddField(
            model_name='project',
            name='infrastructure_type',
            field=models.ForeignKey(blank=True, help_text='Select or create named infrastructure types.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.InfrastructureType'),
        ),
        migrations.AddField(
            model_name='project',
            name='initiative',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.Initiative'),
        ),
        migrations.AddField(
            model_name='project',
            name='operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_operated', to='facts.Organization'),
        ),
        migrations.AddField(
            model_name='project',
            name='regions',
            field=models.ManyToManyField(blank=True, help_text='Select or create geographic region names.', to='locations.Region'),
        ),
        migrations.AddField(
            model_name='initiative',
            name='initiative_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.InitiativeType'),
        ),
        migrations.AddField(
            model_name='initiative',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='infrastructure.Initiative', verbose_name='parent initiative'),
        ),
        migrations.AddField(
            model_name='initiative',
            name='principal_agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='principal_initiatives', to='facts.Person'),
        ),
    ]
