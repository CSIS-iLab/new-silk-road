# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-03-22 20:51
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import locations.models
import markymark.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0002_geocollection'),
        ('sources', '0001_initial'),
        ('facts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InfrastructureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Initiative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=140)),
                ('notes', markymark.fields.MarkdownField(blank=True)),
                ('founding_date', models.DateField(blank=True, null=True, verbose_name='Founding/Signing Date')),
                ('member_countries', django.contrib.postgres.fields.ArrayField(base_field=locations.models.CountryField(choices=[(4, 'Afghanistan'), (248, 'Åland Islands'), (8, 'Albania'), (12, 'Algeria'), (16, 'American Samoa'), (20, 'Andorra'), (24, 'Angola'), (660, 'Anguilla'), (10, 'Antarctica'), (28, 'Antigua and Barbuda'), (32, 'Argentina'), (51, 'Armenia'), (533, 'Aruba'), (36, 'Australia'), (40, 'Austria'), (31, 'Azerbaijan'), (44, 'Bahamas'), (48, 'Bahrain'), (50, 'Bangladesh'), (52, 'Barbados'), (112, 'Belarus'), (56, 'Belgium'), (84, 'Belize'), (204, 'Benin'), (60, 'Bermuda'), (64, 'Bhutan'), (68, 'Bolivia, Plurinational State of'), (535, 'Bonaire, Sint Eustatius and Saba'), (70, 'Bosnia and Herzegovina'), (72, 'Botswana'), (74, 'Bouvet Island'), (76, 'Brazil'), (86, 'British Indian Ocean Territory'), (96, 'Brunei Darussalam'), (100, 'Bulgaria'), (854, 'Burkina Faso'), (108, 'Burundi'), (116, 'Cambodia'), (120, 'Cameroon'), (124, 'Canada'), (132, 'Cabo Verde'), (136, 'Cayman Islands'), (140, 'Central African Republic'), (148, 'Chad'), (152, 'Chile'), (156, 'China'), (162, 'Christmas Island'), (166, 'Cocos (Keeling) Islands'), (170, 'Colombia'), (174, 'Comoros'), (178, 'Congo'), (180, 'Congo, Democratic Republic of the'), (184, 'Cook Islands'), (188, 'Costa Rica'), (384, "Côte d'Ivoire"), (191, 'Croatia'), (192, 'Cuba'), (531, 'Curaçao'), (196, 'Cyprus'), (203, 'Czech Republic'), (208, 'Denmark'), (262, 'Djibouti'), (212, 'Dominica'), (214, 'Dominican Republic'), (218, 'Ecuador'), (818, 'Egypt'), (222, 'El Salvador'), (226, 'Equatorial Guinea'), (232, 'Eritrea'), (233, 'Estonia'), (231, 'Ethiopia'), (238, 'Falkland Islands (Malvinas)'), (234, 'Faroe Islands'), (242, 'Fiji'), (246, 'Finland'), (250, 'France'), (254, 'French Guiana'), (258, 'French Polynesia'), (260, 'French Southern Territories'), (266, 'Gabon'), (270, 'Gambia'), (268, 'Georgia'), (276, 'Germany'), (288, 'Ghana'), (292, 'Gibraltar'), (300, 'Greece'), (304, 'Greenland'), (308, 'Grenada'), (312, 'Guadeloupe'), (316, 'Guam'), (320, 'Guatemala'), (831, 'Guernsey'), (324, 'Guinea'), (624, 'Guinea-Bissau'), (328, 'Guyana'), (332, 'Haiti'), (334, 'Heard Island and McDonald Islands'), (336, 'Holy See'), (340, 'Honduras'), (344, 'Hong Kong'), (348, 'Hungary'), (352, 'Iceland'), (356, 'India'), (360, 'Indonesia'), (364, 'Iran, Islamic Republic of'), (368, 'Iraq'), (372, 'Ireland'), (833, 'Isle of Man'), (376, 'Israel'), (380, 'Italy'), (388, 'Jamaica'), (392, 'Japan'), (832, 'Jersey'), (400, 'Jordan'), (398, 'Kazakhstan'), (404, 'Kenya'), (296, 'Kiribati'), (408, "Korea, Democratic People's Republic of"), (410, 'Korea, Republic of'), (414, 'Kuwait'), (417, 'Kyrgyzstan'), (418, "Lao People's Democratic Republic"), (428, 'Latvia'), (422, 'Lebanon'), (426, 'Lesotho'), (430, 'Liberia'), (434, 'Libya'), (438, 'Liechtenstein'), (440, 'Lithuania'), (442, 'Luxembourg'), (446, 'Macao'), (807, 'Macedonia, the former Yugoslav Republic of'), (450, 'Madagascar'), (454, 'Malawi'), (458, 'Malaysia'), (462, 'Maldives'), (466, 'Mali'), (470, 'Malta'), (584, 'Marshall Islands'), (474, 'Martinique'), (478, 'Mauritania'), (480, 'Mauritius'), (175, 'Mayotte'), (484, 'Mexico'), (583, 'Micronesia, Federated States of'), (498, 'Moldova, Republic of'), (492, 'Monaco'), (496, 'Mongolia'), (499, 'Montenegro'), (500, 'Montserrat'), (504, 'Morocco'), (508, 'Mozambique'), (104, 'Myanmar'), (516, 'Namibia'), (520, 'Nauru'), (524, 'Nepal'), (528, 'Netherlands'), (540, 'New Caledonia'), (554, 'New Zealand'), (558, 'Nicaragua'), (562, 'Niger'), (566, 'Nigeria'), (570, 'Niue'), (574, 'Norfolk Island'), (580, 'Northern Mariana Islands'), (578, 'Norway'), (512, 'Oman'), (586, 'Pakistan'), (585, 'Palau'), (275, 'Palestine, State of'), (591, 'Panama'), (598, 'Papua New Guinea'), (600, 'Paraguay'), (604, 'Peru'), (608, 'Philippines'), (612, 'Pitcairn'), (616, 'Poland'), (620, 'Portugal'), (630, 'Puerto Rico'), (634, 'Qatar'), (638, 'Réunion'), (642, 'Romania'), (643, 'Russian Federation'), (646, 'Rwanda'), (652, 'Saint Barthélemy'), (654, 'Saint Helena, Ascension and Tristan da Cunha'), (659, 'Saint Kitts and Nevis'), (662, 'Saint Lucia'), (663, 'Saint Martin (French part)'), (666, 'Saint Pierre and Miquelon'), (670, 'Saint Vincent and the Grenadines'), (882, 'Samoa'), (674, 'San Marino'), (678, 'Sao Tome and Principe'), (682, 'Saudi Arabia'), (686, 'Senegal'), (688, 'Serbia'), (690, 'Seychelles'), (694, 'Sierra Leone'), (702, 'Singapore'), (534, 'Sint Maarten (Dutch part)'), (703, 'Slovakia'), (705, 'Slovenia'), (90, 'Solomon Islands'), (706, 'Somalia'), (710, 'South Africa'), (239, 'South Georgia and the South Sandwich Islands'), (728, 'South Sudan'), (724, 'Spain'), (144, 'Sri Lanka'), (729, 'Sudan'), (740, 'Suriname'), (744, 'Svalbard and Jan Mayen'), (748, 'Swaziland'), (752, 'Sweden'), (756, 'Switzerland'), (760, 'Syrian Arab Republic'), (158, 'Taiwan, Province of China'), (762, 'Tajikistan'), (834, 'Tanzania, United Republic of'), (764, 'Thailand'), (626, 'Timor-Leste'), (768, 'Togo'), (772, 'Tokelau'), (776, 'Tonga'), (780, 'Trinidad and Tobago'), (788, 'Tunisia'), (792, 'Turkey'), (795, 'Turkmenistan'), (796, 'Turks and Caicos Islands'), (798, 'Tuvalu'), (800, 'Uganda'), (804, 'Ukraine'), (784, 'United Arab Emirates'), (826, 'United Kingdom'), (840, 'United States'), (581, 'United States Minor Outlying Islands'), (858, 'Uruguay'), (860, 'Uzbekistan'), (548, 'Vanuatu'), (862, 'Venezuela, Bolivarian Republic of'), (704, 'Viet Nam'), (92, 'Virgin Islands, British'), (850, 'Virgin Islands, U.S.'), (876, 'Wallis and Futuna'), (732, 'Western Sahara'), (887, 'Yemen'), (894, 'Zambia'), (716, 'Zimbabwe')]), blank=True, default=list, null=True, size=None)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('affiliated_events', models.ManyToManyField(blank=True, to='facts.Event')),
                ('affiliated_organizations', models.ManyToManyField(blank=True, to='facts.Organization')),
                ('affiliated_people', models.ManyToManyField(blank=True, to='facts.Person')),
                ('geographic_scope', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.Region')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InitiativeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200, verbose_name='Project name/title')),
                ('countries', django.contrib.postgres.fields.ArrayField(base_field=locations.models.CountryField(choices=[(4, 'Afghanistan'), (248, 'Åland Islands'), (8, 'Albania'), (12, 'Algeria'), (16, 'American Samoa'), (20, 'Andorra'), (24, 'Angola'), (660, 'Anguilla'), (10, 'Antarctica'), (28, 'Antigua and Barbuda'), (32, 'Argentina'), (51, 'Armenia'), (533, 'Aruba'), (36, 'Australia'), (40, 'Austria'), (31, 'Azerbaijan'), (44, 'Bahamas'), (48, 'Bahrain'), (50, 'Bangladesh'), (52, 'Barbados'), (112, 'Belarus'), (56, 'Belgium'), (84, 'Belize'), (204, 'Benin'), (60, 'Bermuda'), (64, 'Bhutan'), (68, 'Bolivia, Plurinational State of'), (535, 'Bonaire, Sint Eustatius and Saba'), (70, 'Bosnia and Herzegovina'), (72, 'Botswana'), (74, 'Bouvet Island'), (76, 'Brazil'), (86, 'British Indian Ocean Territory'), (96, 'Brunei Darussalam'), (100, 'Bulgaria'), (854, 'Burkina Faso'), (108, 'Burundi'), (116, 'Cambodia'), (120, 'Cameroon'), (124, 'Canada'), (132, 'Cabo Verde'), (136, 'Cayman Islands'), (140, 'Central African Republic'), (148, 'Chad'), (152, 'Chile'), (156, 'China'), (162, 'Christmas Island'), (166, 'Cocos (Keeling) Islands'), (170, 'Colombia'), (174, 'Comoros'), (178, 'Congo'), (180, 'Congo, Democratic Republic of the'), (184, 'Cook Islands'), (188, 'Costa Rica'), (384, "Côte d'Ivoire"), (191, 'Croatia'), (192, 'Cuba'), (531, 'Curaçao'), (196, 'Cyprus'), (203, 'Czech Republic'), (208, 'Denmark'), (262, 'Djibouti'), (212, 'Dominica'), (214, 'Dominican Republic'), (218, 'Ecuador'), (818, 'Egypt'), (222, 'El Salvador'), (226, 'Equatorial Guinea'), (232, 'Eritrea'), (233, 'Estonia'), (231, 'Ethiopia'), (238, 'Falkland Islands (Malvinas)'), (234, 'Faroe Islands'), (242, 'Fiji'), (246, 'Finland'), (250, 'France'), (254, 'French Guiana'), (258, 'French Polynesia'), (260, 'French Southern Territories'), (266, 'Gabon'), (270, 'Gambia'), (268, 'Georgia'), (276, 'Germany'), (288, 'Ghana'), (292, 'Gibraltar'), (300, 'Greece'), (304, 'Greenland'), (308, 'Grenada'), (312, 'Guadeloupe'), (316, 'Guam'), (320, 'Guatemala'), (831, 'Guernsey'), (324, 'Guinea'), (624, 'Guinea-Bissau'), (328, 'Guyana'), (332, 'Haiti'), (334, 'Heard Island and McDonald Islands'), (336, 'Holy See'), (340, 'Honduras'), (344, 'Hong Kong'), (348, 'Hungary'), (352, 'Iceland'), (356, 'India'), (360, 'Indonesia'), (364, 'Iran, Islamic Republic of'), (368, 'Iraq'), (372, 'Ireland'), (833, 'Isle of Man'), (376, 'Israel'), (380, 'Italy'), (388, 'Jamaica'), (392, 'Japan'), (832, 'Jersey'), (400, 'Jordan'), (398, 'Kazakhstan'), (404, 'Kenya'), (296, 'Kiribati'), (408, "Korea, Democratic People's Republic of"), (410, 'Korea, Republic of'), (414, 'Kuwait'), (417, 'Kyrgyzstan'), (418, "Lao People's Democratic Republic"), (428, 'Latvia'), (422, 'Lebanon'), (426, 'Lesotho'), (430, 'Liberia'), (434, 'Libya'), (438, 'Liechtenstein'), (440, 'Lithuania'), (442, 'Luxembourg'), (446, 'Macao'), (807, 'Macedonia, the former Yugoslav Republic of'), (450, 'Madagascar'), (454, 'Malawi'), (458, 'Malaysia'), (462, 'Maldives'), (466, 'Mali'), (470, 'Malta'), (584, 'Marshall Islands'), (474, 'Martinique'), (478, 'Mauritania'), (480, 'Mauritius'), (175, 'Mayotte'), (484, 'Mexico'), (583, 'Micronesia, Federated States of'), (498, 'Moldova, Republic of'), (492, 'Monaco'), (496, 'Mongolia'), (499, 'Montenegro'), (500, 'Montserrat'), (504, 'Morocco'), (508, 'Mozambique'), (104, 'Myanmar'), (516, 'Namibia'), (520, 'Nauru'), (524, 'Nepal'), (528, 'Netherlands'), (540, 'New Caledonia'), (554, 'New Zealand'), (558, 'Nicaragua'), (562, 'Niger'), (566, 'Nigeria'), (570, 'Niue'), (574, 'Norfolk Island'), (580, 'Northern Mariana Islands'), (578, 'Norway'), (512, 'Oman'), (586, 'Pakistan'), (585, 'Palau'), (275, 'Palestine, State of'), (591, 'Panama'), (598, 'Papua New Guinea'), (600, 'Paraguay'), (604, 'Peru'), (608, 'Philippines'), (612, 'Pitcairn'), (616, 'Poland'), (620, 'Portugal'), (630, 'Puerto Rico'), (634, 'Qatar'), (638, 'Réunion'), (642, 'Romania'), (643, 'Russian Federation'), (646, 'Rwanda'), (652, 'Saint Barthélemy'), (654, 'Saint Helena, Ascension and Tristan da Cunha'), (659, 'Saint Kitts and Nevis'), (662, 'Saint Lucia'), (663, 'Saint Martin (French part)'), (666, 'Saint Pierre and Miquelon'), (670, 'Saint Vincent and the Grenadines'), (882, 'Samoa'), (674, 'San Marino'), (678, 'Sao Tome and Principe'), (682, 'Saudi Arabia'), (686, 'Senegal'), (688, 'Serbia'), (690, 'Seychelles'), (694, 'Sierra Leone'), (702, 'Singapore'), (534, 'Sint Maarten (Dutch part)'), (703, 'Slovakia'), (705, 'Slovenia'), (90, 'Solomon Islands'), (706, 'Somalia'), (710, 'South Africa'), (239, 'South Georgia and the South Sandwich Islands'), (728, 'South Sudan'), (724, 'Spain'), (144, 'Sri Lanka'), (729, 'Sudan'), (740, 'Suriname'), (744, 'Svalbard and Jan Mayen'), (748, 'Swaziland'), (752, 'Sweden'), (756, 'Switzerland'), (760, 'Syrian Arab Republic'), (158, 'Taiwan, Province of China'), (762, 'Tajikistan'), (834, 'Tanzania, United Republic of'), (764, 'Thailand'), (626, 'Timor-Leste'), (768, 'Togo'), (772, 'Tokelau'), (776, 'Tonga'), (780, 'Trinidad and Tobago'), (788, 'Tunisia'), (792, 'Turkey'), (795, 'Turkmenistan'), (796, 'Turks and Caicos Islands'), (798, 'Tuvalu'), (800, 'Uganda'), (804, 'Ukraine'), (784, 'United Arab Emirates'), (826, 'United Kingdom'), (840, 'United States'), (581, 'United States Minor Outlying Islands'), (858, 'Uruguay'), (860, 'Uzbekistan'), (548, 'Vanuatu'), (862, 'Venezuela, Bolivarian Republic of'), (704, 'Viet Nam'), (92, 'Virgin Islands, British'), (850, 'Virgin Islands, U.S.'), (876, 'Wallis and Futuna'), (732, 'Western Sahara'), (887, 'Yemen'), (894, 'Zambia'), (716, 'Zimbabwe')]), blank=True, default=list, null=True, size=None)),
                ('total_cost_description', models.CharField(blank=True, max_length=100, verbose_name='Total Project Cost')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('commencement_date', models.DateField(blank=True, null=True, verbose_name='Date of commencement of works')),
                ('planned_completion_date', models.DateField(blank=True, null=True, verbose_name='Planned completion date')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Announced/Under Negotiation'), (2, 'Preparatory Works'), (3, 'Started'), (4, 'Under Construction'), (5, 'Completed')], default=1, null=True)),
                ('sources', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=500), blank=True, default=list, help_text='Enter URLs separated by commas.', null=True, size=None, verbose_name='Sources URLs')),
                ('notes', markymark.fields.MarkdownField(blank=True)),
                ('consultants', models.ManyToManyField(blank=True, related_name='projects_consulted', to='facts.Organization', verbose_name='Consultants')),
                ('contacts', models.ManyToManyField(blank=True, related_name='projects_contacts', to='facts.Person', verbose_name='Points of contact')),
                ('contractors', models.ManyToManyField(blank=True, related_name='projects_contracted', to='facts.Organization', verbose_name='Contractors')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.PositiveSmallIntegerField(blank=True, choices=[('Public Materials', ((1, 'Press Releases'), (2, 'Presentations & Brochures'), (3, 'National Development Plans'))), ('Agreements/Contracts', ((4, 'MoU'), (5, 'Financing Agreements'), (6, 'Procurement Contracts'), (7, 'Other Agreements'))), ('Operational Documents', ((8, 'Concept Notes'), (9, 'Review and Approval Documents'), (10, 'Procurement Documents'), (11, 'Appraisal Documents'), (12, 'Administration Manuals'), (13, 'Aide-Memoires'), (14, 'Financial Audits'))), ('Impact Assessment and Monitoring Reports', ((15, 'Environmental and Social Assessment'), (16, 'Resettlement Frameworks'), (17, 'Safeguards Monitoring Reports'), (18, 'Consultation Minutes'))), ('Implementation Progress Reports', ((19, 'Progress Reports'), (20, 'Completion Reports'))), ('Miscellaneous Reports', ((21, 'Miscellaneous Reports'),))], null=True, verbose_name='type')),
                ('notes', markymark.fields.MarkdownField(blank=True)),
                ('status_indicator', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Announced/Under Negotiation'), (2, 'Preparatory Works'), (3, 'Started'), (4, 'Under Construction'), (5, 'Completed')], null=True)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sources.Document')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFunding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, help_text='Values in whole units (dollars, etc.)', null=True)),
                ('currency', models.CharField(blank=True, choices=[('CVE', 'Cabo Verde Escudo'), ('KYD', 'Cayman Islands Dollar'), ('GYD', 'Guyana Dollar'), ('AZN', 'Azerbaijanian Manat'), ('CHW', 'WIR Franc'), ('UGX', 'Uganda Shilling'), ('GTQ', 'Quetzal'), ('MXV', 'Mexican Unidad de Inversion (UDI)'), ('BWP', 'Pula'), ('HKD', 'Hong Kong Dollar'), ('SEK', 'Swedish Krona'), ('MRO', 'Ouguiya'), ('GIP', 'Gibraltar Pound'), ('COU', 'Unidad de Valor Real'), ('BND', 'Brunei Dollar'), ('LBP', 'Lebanese Pound'), ('MMK', 'Kyat'), ('AWG', 'Aruban Florin'), ('XCD', 'East Caribbean Dollar'), ('KES', 'Kenyan Shilling'), ('OMR', 'Rial Omani'), ('DZD', 'Algerian Dinar'), ('EGP', 'Egyptian Pound'), ('BTN', 'Ngultrum'), ('PLN', 'Zloty'), ('MWK', 'Malawi Kwacha'), ('KWD', 'Kuwaiti Dinar'), ('HTG', 'Gourde'), ('PHP', 'Philippine Peso'), ('KPW', 'North Korean Won'), ('BRL', 'Brazilian Real'), ('XAF', 'CFA Franc BEAC'), ('UYU', 'Peso Uruguayo'), ('ZMW', 'Zambian Kwacha'), ('USN', 'US Dollar (Next day)'), ('SOS', 'Somali Shilling'), ('ISK', 'Iceland Krona'), ('PAB', 'Balboa'), ('LRD', 'Liberian Dollar'), ('GNF', 'Guinea Franc'), ('GMD', 'Dalasi'), ('VND', 'Dong'), ('CZK', 'Czech Koruna'), ('ARS', 'Argentine Peso'), ('PKR', 'Pakistan Rupee'), ('BOV', 'Mvdol'), ('NPR', 'Nepalese Rupee'), ('MVR', 'Rufiyaa'), ('BZD', 'Belize Dollar'), ('SBD', 'Solomon Islands Dollar'), ('CHF', 'Swiss Franc'), ('MOP', 'Pataca'), ('CLP', 'Chilean Peso'), ('TJS', 'Somoni'), ('USD', 'US Dollar'), ('ZWL', 'Zimbabwe Dollar'), ('BHD', 'Bahraini Dinar'), ('ILS', 'New Israeli Sheqel'), ('UAH', 'Hryvnia'), ('SDG', 'Sudanese Pound'), ('ZAR', 'Rand'), ('TWD', 'New Taiwan Dollar'), ('THB', 'Baht'), ('STD', 'Dobra'), ('CNY', 'Yuan Renminbi'), ('BOB', 'Boliviano'), ('MYR', 'Malaysian Ringgit'), ('NOK', 'Norwegian Krone'), ('DJF', 'Djibouti Franc'), ('KMF', 'Comoro Franc'), ('BYR', 'Belarusian Ruble'), ('TMT', 'Turkmenistan New Manat'), ('BIF', 'Burundi Franc'), ('VEF', 'Bolívar'), ('WST', 'Tala'), ('PGK', 'Kina'), ('AED', 'UAE Dirham'), ('INR', 'Indian Rupee'), ('PEN', 'Sol'), ('NGN', 'Naira'), ('TZS', 'Tanzanian Shilling'), ('UYI', 'Uruguay Peso en Unidades Indexadas (URUIURUI)'), ('IRR', 'Iranian Rial'), ('YER', 'Yemeni Rial'), ('FKP', 'Falkland Islands Pound'), ('CUP', 'Cuban Peso'), ('KZT', 'Tenge'), ('SCR', 'Seychelles Rupee'), ('LKR', 'Sri Lanka Rupee'), ('CHE', 'WIR Euro'), ('UZS', 'Uzbekistan Sum'), ('AMD', 'Armenian Dram'), ('DKK', 'Danish Krone'), ('IDR', 'Rupiah'), ('RWF', 'Rwanda Franc'), ('TND', 'Tunisian Dinar'), ('SGD', 'Singapore Dollar'), ('BSD', 'Bahamian Dollar'), ('MZN', 'Mozambique Metical'), ('TTD', 'Trinidad and Tobago Dollar'), ('NIO', 'Cordoba Oro'), ('NAD', 'Namibia Dollar'), ('ERN', 'Nakfa'), ('HNL', 'Lempira'), ('TOP', 'Pa’anga'), ('AFN', 'Afghani'), ('CLF', 'Unidad de Fomento'), ('CRC', 'Costa Rican Colon'), ('ANG', 'Netherlands Antillean Guilder'), ('MXN', 'Mexican Peso'), ('JPY', 'Yen'), ('KRW', 'Won'), ('GEL', 'Lari'), ('KHR', 'Riel'), ('KGS', 'Som'), ('PYG', 'Guarani'), ('HUF', 'Forint'), ('SLL', 'Leone'), ('XPF', 'CFP Franc'), ('VUV', 'Vatu'), ('SSP', 'South Sudanese Pound'), ('BDT', 'Taka'), ('RSD', 'Serbian Dinar'), ('COP', 'Colombian Peso'), ('CDF', 'Congolese Franc'), ('BBD', 'Barbados Dollar'), ('BMD', 'Bermudian Dollar'), ('FJD', 'Fiji Dollar'), ('SVC', 'El Salvador Colon'), ('SHP', 'Saint Helena Pound'), ('MUR', 'Mauritius Rupee'), ('HRK', 'Kuna'), ('AOA', 'Kwanza'), ('NZD', 'New Zealand Dollar'), ('MKD', 'Denar'), ('LYD', 'Libyan Dinar'), ('MAD', 'Moroccan Dirham'), ('RON', 'Romanian Leu'), ('MNT', 'Tugrik'), ('CUC', 'Peso Convertible'), ('AUD', 'Australian Dollar'), ('DOP', 'Dominican Peso'), ('ETB', 'Ethiopian Birr'), ('SRD', 'Surinam Dollar'), ('CAD', 'Canadian Dollar'), ('BAM', 'Convertible Mark'), ('GBP', 'Pound Sterling'), ('IQD', 'Iraqi Dinar'), ('SAR', 'Saudi Riyal'), ('JOD', 'Jordanian Dinar'), ('JMD', 'Jamaican Dollar'), ('LSL', 'Loti'), ('LAK', 'Kip'), ('TRY', 'Turkish Lira'), ('ALL', 'Lek'), ('RUB', 'Russian Ruble'), ('EUR', 'Euro'), ('QAR', 'Qatari Rial'), ('SYP', 'Syrian Pound'), ('MDL', 'Moldovan Leu'), ('GHS', 'Ghana Cedi'), ('MGA', 'Malagasy Ariary'), ('SZL', 'Lilangeni'), ('XOF', 'CFA Franc BCEAO'), ('BGN', 'Bulgarian Lev')], default='USD', max_length=3, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.Project')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facts.Organization')),
            ],
            options={
                'verbose_name_plural': 'project funders',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='documents',
            field=models.ManyToManyField(blank=True, to='infrastructure.ProjectDocument'),
        ),
        migrations.AddField(
            model_name='project',
            name='funding',
            field=models.ManyToManyField(blank=True, related_name='projects_funded', through='infrastructure.ProjectFunding', to='facts.Organization'),
        ),
        migrations.AddField(
            model_name='project',
            name='implementers',
            field=models.ManyToManyField(blank=True, related_name='projects_implemented', to='facts.Organization', verbose_name='Client or implementing agency/ies'),
        ),
        migrations.AddField(
            model_name='project',
            name='infrastructure_type',
            field=models.ForeignKey(blank=True, help_text='Select or create named infrastructure types.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.InfrastructureType'),
        ),
        migrations.AddField(
            model_name='project',
            name='initiative',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.Initiative'),
        ),
        migrations.AddField(
            model_name='project',
            name='operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_operated', to='facts.Organization'),
        ),
        migrations.AddField(
            model_name='project',
            name='regions',
            field=models.ManyToManyField(blank=True, help_text='Select or create geographic region names.', to='locations.Region'),
        ),
        migrations.AddField(
            model_name='initiative',
            name='initiative_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.InitiativeType'),
        ),
        migrations.AddField(
            model_name='initiative',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='infrastructure.Initiative', verbose_name='parent initiative'),
        ),
        migrations.AddField(
            model_name='initiative',
            name='principal_agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='principal_initiatives', to='facts.Person'),
        ),
    ]
